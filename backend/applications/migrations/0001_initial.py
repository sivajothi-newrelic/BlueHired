# Generated by Django 4.2.23 on 2025-06-24 10:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feedback_type', models.CharField(choices=[('employer_to_candidate', 'Employer to Candidate'), ('candidate_to_employer', 'Candidate to Employer'), ('platform_feedback', 'Platform Feedback')], max_length=25)),
                ('overall_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('communication_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('professionalism_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('positive_feedback', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('would_work_again', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'application_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('general', 'General'), ('interview_invite', 'Interview Invitation'), ('status_update', 'Status Update'), ('rejection', 'Rejection'), ('offer', 'Job Offer'), ('follow_up', 'Follow Up')], default='general', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='application_message_attachments/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'application_messages',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewed', 'Interviewed'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], max_length=20)),
                ('new_status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewed', 'Interviewed'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'application_status_history',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interview_type', models.CharField(choices=[('phone', 'Phone Interview'), ('video', 'Video Interview'), ('in_person', 'In-Person Interview'), ('group', 'Group Interview'), ('technical', 'Technical Interview')], default='in_person', max_length=15)),
                ('scheduled_at', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled'), ('no_show', 'No Show')], default='scheduled', max_length=15)),
                ('preparation_notes', models.TextField(blank=True, null=True)),
                ('interview_notes', models.TextField(blank=True, null=True)),
                ('technical_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('communication_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('overall_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('recommendation', models.CharField(blank=True, choices=[('strongly_recommend', 'Strongly Recommend'), ('recommend', 'Recommend'), ('neutral', 'Neutral'), ('not_recommend', 'Not Recommend'), ('strongly_not_recommend', 'Strongly Not Recommend')], max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interviews',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='application_resumes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='application_documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewed', 'Interviewed'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('viewed_by_employer', models.BooleanField(default=False)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('employer_notes', models.TextField(blank=True, null=True)),
                ('interview_scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('interview_location', models.CharField(blank=True, max_length=200, null=True)),
                ('interview_notes', models.TextField(blank=True, null=True)),
                ('employer_feedback', models.TextField(blank=True, null=True)),
                ('applicant_feedback', models.TextField(blank=True, null=True)),
                ('rating_by_employer', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'job_applications',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_title', models.CharField(max_length=200)),
                ('salary_offered', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_type', models.CharField(choices=[('hourly', 'Per Hour'), ('daily', 'Per Day'), ('weekly', 'Per Week'), ('monthly', 'Per Month'), ('yearly', 'Per Year'), ('project', 'Per Project')], default='monthly', max_length=10)),
                ('benefits', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('probation_period_months', models.PositiveIntegerField(default=3)),
                ('notice_period_days', models.PositiveIntegerField(default=30)),
                ('work_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_terms', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('negotiating', 'Negotiating'), ('expired', 'Expired'), ('withdrawn', 'Withdrawn')], default='pending', max_length=15)),
                ('offer_valid_until', models.DateTimeField()),
                ('offered_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('offer_letter', models.FileField(blank=True, null=True, upload_to='offer_letters/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('candidate_response', models.TextField(blank=True, null=True)),
                ('counter_offer_details', models.TextField(blank=True, null=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_offer', to='applications.jobapplication')),
            ],
            options={
                'db_table': 'job_offers',
                'ordering': ['-offered_at'],
            },
        ),
    ]
